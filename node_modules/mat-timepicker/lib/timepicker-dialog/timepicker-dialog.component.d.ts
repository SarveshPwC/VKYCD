import { EventEmitter, DoCheck } from '@angular/core';
import { ClockViewType, ClockMode, IAllowed24HourMap, IAllowed12HourMap } from '../interfaces-and-types';
import { twoDigits } from '../util';
import * as ɵngcc0 from '@angular/core';
export declare class MatTimepickerComponentDialogComponent implements DoCheck {
    data: any;
    twoDigits: typeof twoDigits;
    changeEvent: EventEmitter<any>;
    okClickEvent: EventEmitter<any>;
    cancelClickEvent: EventEmitter<any>;
    allowed24HourMap: IAllowed24HourMap;
    allowed12HourMap: IAllowed12HourMap;
    invalidSelection: boolean;
    okLabel: string;
    cancelLabel: string;
    set value(value: any);
    get value(): any;
    mode: ClockMode;
    viewType: ClockViewType;
    minutes: any;
    color: string;
    isPm: boolean;
    skipMinuteAutoSwitch: boolean;
    autoSwitchID: any;
    invalidMedianID: any;
    hasInvalidMeridiem: boolean;
    editHoursClicked: boolean;
    isClosing: boolean;
    minDate: Date;
    maxDate: Date;
    _formattedHour: any;
    _hours: any;
    _value: Date;
    set hours(value: any);
    get hours(): any;
    get formattedHours(): any;
    bindData(data: any): void;
    constructor(data: any);
    ngDoCheck(): void;
    handleClockChange({ value, type }: {
        value: number;
        type: 'minutes' | 'hours';
    }): void;
    clearInvalidMeridiem(): void;
    handleUnavailableSelection(): void;
    handleClockChangeDone(e: any): void;
    editHours(): void;
    editMinutes(): void;
    invalidSelectionHandler(value: any): void;
    invalidMeridiem(): void;
    meridiemChange(hours: any): void;
    setAm(): void;
    setPm(): void;
    okClickHandler(): void;
    cancelClickHandler(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatTimepickerComponentDialogComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MatTimepickerComponentDialogComponent, "mat-timepicker-dialog", never, {}, {
    "changeEvent": "changeEvent";
    "okClickEvent": "okClickEvent";
    "cancelClickEvent": "cancelClickEvent";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZXBpY2tlci1kaWFsb2cuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInRpbWVwaWNrZXItZGlhbG9nLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgRG9DaGVjayB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2xvY2tWaWV3VHlwZSwgQ2xvY2tNb2RlLCBJQWxsb3dlZDI0SG91ck1hcCwgSUFsbG93ZWQxMkhvdXJNYXAgfSBmcm9tICcuLi9pbnRlcmZhY2VzLWFuZC10eXBlcyc7XG5pbXBvcnQgeyB0d29EaWdpdHMgfSBmcm9tICcuLi91dGlsJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE1hdFRpbWVwaWNrZXJDb21wb25lbnREaWFsb2dDb21wb25lbnQgaW1wbGVtZW50cyBEb0NoZWNrIHtcbiAgICBkYXRhOiBhbnk7XG4gICAgdHdvRGlnaXRzOiB0eXBlb2YgdHdvRGlnaXRzO1xuICAgIGNoYW5nZUV2ZW50OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBva0NsaWNrRXZlbnQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGNhbmNlbENsaWNrRXZlbnQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGFsbG93ZWQyNEhvdXJNYXA6IElBbGxvd2VkMjRIb3VyTWFwO1xuICAgIGFsbG93ZWQxMkhvdXJNYXA6IElBbGxvd2VkMTJIb3VyTWFwO1xuICAgIGludmFsaWRTZWxlY3Rpb246IGJvb2xlYW47XG4gICAgb2tMYWJlbDogc3RyaW5nO1xuICAgIGNhbmNlbExhYmVsOiBzdHJpbmc7XG4gICAgc2V0IHZhbHVlKHZhbHVlOiBhbnkpO1xuICAgIGdldCB2YWx1ZSgpOiBhbnk7XG4gICAgbW9kZTogQ2xvY2tNb2RlO1xuICAgIHZpZXdUeXBlOiBDbG9ja1ZpZXdUeXBlO1xuICAgIG1pbnV0ZXM6IGFueTtcbiAgICBjb2xvcjogc3RyaW5nO1xuICAgIGlzUG06IGJvb2xlYW47XG4gICAgc2tpcE1pbnV0ZUF1dG9Td2l0Y2g6IGJvb2xlYW47XG4gICAgYXV0b1N3aXRjaElEOiBhbnk7XG4gICAgaW52YWxpZE1lZGlhbklEOiBhbnk7XG4gICAgaGFzSW52YWxpZE1lcmlkaWVtOiBib29sZWFuO1xuICAgIGVkaXRIb3Vyc0NsaWNrZWQ6IGJvb2xlYW47XG4gICAgaXNDbG9zaW5nOiBib29sZWFuO1xuICAgIG1pbkRhdGU6IERhdGU7XG4gICAgbWF4RGF0ZTogRGF0ZTtcbiAgICBfZm9ybWF0dGVkSG91cjogYW55O1xuICAgIF9ob3VyczogYW55O1xuICAgIF92YWx1ZTogRGF0ZTtcbiAgICBzZXQgaG91cnModmFsdWU6IGFueSk7XG4gICAgZ2V0IGhvdXJzKCk6IGFueTtcbiAgICBnZXQgZm9ybWF0dGVkSG91cnMoKTogYW55O1xuICAgIGJpbmREYXRhKGRhdGE6IGFueSk6IHZvaWQ7XG4gICAgY29uc3RydWN0b3IoZGF0YTogYW55KTtcbiAgICBuZ0RvQ2hlY2soKTogdm9pZDtcbiAgICBoYW5kbGVDbG9ja0NoYW5nZSh7IHZhbHVlLCB0eXBlIH06IHtcbiAgICAgICAgdmFsdWU6IG51bWJlcjtcbiAgICAgICAgdHlwZTogJ21pbnV0ZXMnIHwgJ2hvdXJzJztcbiAgICB9KTogdm9pZDtcbiAgICBjbGVhckludmFsaWRNZXJpZGllbSgpOiB2b2lkO1xuICAgIGhhbmRsZVVuYXZhaWxhYmxlU2VsZWN0aW9uKCk6IHZvaWQ7XG4gICAgaGFuZGxlQ2xvY2tDaGFuZ2VEb25lKGU6IGFueSk6IHZvaWQ7XG4gICAgZWRpdEhvdXJzKCk6IHZvaWQ7XG4gICAgZWRpdE1pbnV0ZXMoKTogdm9pZDtcbiAgICBpbnZhbGlkU2VsZWN0aW9uSGFuZGxlcih2YWx1ZTogYW55KTogdm9pZDtcbiAgICBpbnZhbGlkTWVyaWRpZW0oKTogdm9pZDtcbiAgICBtZXJpZGllbUNoYW5nZShob3VyczogYW55KTogdm9pZDtcbiAgICBzZXRBbSgpOiB2b2lkO1xuICAgIHNldFBtKCk6IHZvaWQ7XG4gICAgb2tDbGlja0hhbmRsZXIoKTogdm9pZDtcbiAgICBjYW5jZWxDbGlja0hhbmRsZXIoKTogdm9pZDtcbn1cbiJdfQ==