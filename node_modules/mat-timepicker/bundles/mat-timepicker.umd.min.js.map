{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://mat-timepicker/lib/util.ts","ng://mat-timepicker/lib/timepicker-dialog/timepicker-dialog.component.ts","ng://mat-timepicker/lib/timepicker.directive.ts","ng://mat-timepicker/lib/clock/clock.component.ts","ng://mat-timepicker/lib/mat-timepicker.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","twoDigits","convertHoursForMode","hour","mode","isPm","isDateInRange","minDate","maxDate","current","unixCurrentDate","isAllowed","minutes","clockMode","selectedMeridiem","checkDate","Date","setHours","setMinutes","setSeconds","setMilliseconds","MatTimepickerComponentDialogComponent","data","this","changeEvent","EventEmitter","okClickEvent","cancelClickEvent","allowed24HourMap","allowed12HourMap","invalidSelection","viewType","skipMinuteAutoSwitch","autoSwitchID","invalidMedianID","hasInvalidMeridiem","editHoursClicked","isClosing","bindData","prototype","_value","hours","getHours","getMinutes","_hours","_formattedHour","okLabel","cancelLabel","color","ngDoCheck","handleClockChange","_a","type","is24hoursAutoMeridiemChange","newValue","emit","clearInvalidMeridiem","handleUnavailableSelection","clearTimeout","handleClockChangeDone","_this","preventDefault","setTimeout","editMinutes","editHours","invalidSelectionHandler","invalidMeridiem","meridiemChange","changeData","setAm","setPm","okClickHandler","cancelClickHandler","Inject","args","MAT_DIALOG_DATA","Output","Component","selector","template","MatTimepickerDirective","ngControl","dialog","renderer","zone","fm","elRef","ngZone","_platform","_parentForm","_matFormFiled","_parentFormGroup","_defaultErrorStateMatcher","_errorState","_disabled","_readonly","isAlive","Subject","stateChanges","_uid","MatTimepickerDirective_1","nextId","describedBy","_required","focused","isInputFocused","disableDialogOpenOnClick","strict","controlType","listeners","_skipValueChangeEmission","combination","timeChange","invalidInput","clickHandler","modalRef","componentInstance","disabled","showDialog","handleChange","v","getTime","currentValue","handleOk","onChangeFn","close","handleCancel","id","errorStateMatcher","valueAccessor","IOS","runOutsideAngular","nativeElement","addEventListener","event","el","selectionStart","selectionEnd","setSelectionRange","_isServer","isBrowser","oldState","parent","control","newState","isErrorState","coerceBooleanProperty","_id","empty","req","_placeholder","plh","_formattedValueString","setInputElementValue","_isPm","formattedValueString","inputHandler","writeValue","meridiemResult","match","meridiem","replace","valueHasColumn","includes","_c","test","_b","split","isNaN","toLowerCase","keydownHandler","metaKey","ctrlKey","altKey","concat","code","tValue","slice","pattern","stopImmediatePropagation","keyupHandler","filter","focusHandler","focusoutHandler","onTouchedFn","setDescribedByIds","ids","join","onContainerClick","tagName","focus","Promise","resolve","then","setProperty","validate","newMinDate","newMaxDate","newCurrent","isTimeInRange","dateRange","ngAfterViewInit","listen","_elementRef","ngOnInit","monitor","subscribe","origin","hasMaxDate","hasMinDate","generateAllowedMap","_rawValidators","find","isStrictMode","h","hourMap","currentDate","am","pm","ngOnChanges","simpleChanges","isFirstChange","previousValue","disableLimitBase","checkValidity","isInnerCall","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","open","autoFocus","instance","pipe","takeUntil","beforeClosed","first","afterClosed","ngOnDestroy","complete","stopMonitoring","forEach","l","NgControl","Optional","Self","MatDialog","Renderer2","NgZone","FocusMonitor","ElementRef","Platform","NgForm","MatFormField","FormGroupDirective","ErrorStateMatcher","Input","HostBinding","HostListener","Directive","providers","provide","MatFormFieldControl","useExisting","host","class","[class.mat-input-server]","[attr.id]","[attr.placeholder]","[disabled]","[required]","[attr.readonly]","[attr.aria-invalid]","[attr.aria-required]","exportAs","ClockComponent","unavailableSelection","isFormattedValueAllowed","touching","numbers","secondaryNumbers","minuteDots","invalidMeridiemEmitted","handleTouchMove","rect","getBoundingClientRect","movePointer","changedTouches","clientX","left","clientY","top","initIsAllowedFn","isAvailableFn","isHourCheck","values","isAvailable","formattedHours","firstChange","calculateAngule","setNumbers","formattedValue","isSelectedTimeAvailable","angle","getPointerAngle","meridiem_1","isAllowedFn","num","undefined","getNumbers","size","start","meridiem_2","isAllowedFn_1","step","map","digit","display","allowed","disableAnimatedPointer","enableAnimatedPointer","handleTouchEnd","handleMouseMove","buttons","which","handleClick","x","y","getPointerValue","count","Array","apply","_","translateX","Math","cos","PI","translateY","sin","atan2","round","radius","sqrt","pow","changeDetection","ChangeDetectionStrategy","OnPush","MatTimepickerModule","NgModule","declarations","imports","CommonModule","MatDialogModule","MatButtonModule","MatToolbarModule","MatIconModule","MatInputModule","exports","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { ITimeData, ClockViewType, ClockMode } from './interfaces-and-types';\n\nexport function twoDigits(n) {\n  return n < 10 ? `0${n}` : `${n}`;\n}\n\nexport function addDays(date: Date, days: number) {\n  const result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n}\n\nexport function convertHoursForMode(hour: number, mode: ClockMode) {\n  const isPm = hour >= 12;\n  if (mode === '24h') {\n    return { hour, isPm };\n  } else if (hour === 0 || hour === 12) {\n    return { hour: 12, isPm };\n  } else if (hour < 12) {\n    return { hour, isPm };\n  }\n  return { hour: hour - 12, isPm };\n}\n\nfunction mod(a, b) {\n  return a - Math.floor(a / b) * b;\n}\n\nexport function getShortestAngle(from, to) {\n  const difference = to - from;\n  return from + mod(difference + 180, 360) - 180;\n}\n\nexport function isDateInRange(minDate: Date, maxDate: Date, current: Date) {\n  const unixCurrentDate = +current;\n  return (!minDate || +minDate <= unixCurrentDate) && (!maxDate || unixCurrentDate <= +maxDate);\n}\n\nexport function isTimeInRange(minDate: Date, maxDate: Date, current: Date) {\n  if (minDate instanceof Date) {\n    const newMinDate = new Date();\n    newMinDate.setHours(minDate.getHours());\n    newMinDate.setMinutes(minDate.getMinutes());\n    newMinDate.setSeconds(0);\n    newMinDate.setMilliseconds(0);\n    minDate = newMinDate;\n  }\n  if (maxDate instanceof Date) {\n    const newMaxDate = new Date();\n    newMaxDate.setHours(maxDate.getHours());\n    newMaxDate.setMinutes(maxDate.getMinutes());\n    newMaxDate.setSeconds(0);\n    newMaxDate.setMilliseconds(0);\n    maxDate = newMaxDate;\n  }\n  if (current instanceof Date) {\n    const newCurrent = new Date();\n    newCurrent.setHours(current.getHours());\n    newCurrent.setMinutes(current.getMinutes());\n    newCurrent.setSeconds(0);\n    newCurrent.setMilliseconds(0);\n    current = newCurrent;\n  }\n  const unixCurrentDate = +current;\n  return (!minDate || +minDate <= unixCurrentDate) && (!maxDate || unixCurrentDate <= +maxDate);\n}\n\n// used when generating the allowed maps\n\nexport function isAllowed(\n  hour: number,\n  minutes: number,\n  minDate: Date,\n  maxDate: Date,\n  clockMode: ClockMode,\n  selectedMeridiem?: 'AM' | 'PM'\n) {\n  if (hour > 24 || hour < 0 || minutes > 60 || minutes < 0) { return false; }\n\n  if (!minDate && !maxDate) { return true; }\n\n  if (clockMode === '12h') {\n    if (hour === 12 && selectedMeridiem === 'AM') { hour = 0; }\n    if (hour > 12) { hour -= 12; }\n  }\n  const checkDate = new Date();\n\n  checkDate.setHours(hour);\n  checkDate.setMinutes(minutes);\n  checkDate.setSeconds(0);\n  checkDate.setMilliseconds(0);\n\n  return isDateInRange(minDate, maxDate, checkDate);\n}\n\n// used by the clock component to visually disable the not allowed values\n\nexport function getIsAvailabeFn(allowed12HourMap, allowed24HourMap, mode: ClockMode) {\n  return (value: number, viewType: ClockViewType, isPm: boolean, h?: number) => {\n    const isHourCheck = viewType === 'hours';\n    const [hour, minutes] = isHourCheck ? [value, null] : [h, value];\n\n    if (mode === '12h') {\n      if (!allowed12HourMap) { return true; }\n      const meridiem = isPm ? 'pm' : 'am';\n      if (isHourCheck) {\n        return !!Object.values(allowed12HourMap[meridiem][hour]).find(v => v === true);\n      }\n      return allowed12HourMap[meridiem][hour][minutes];\n    }\n\n    if (!allowed24HourMap) { return true; }\n\n    if (isHourCheck) {\n      return !!Object.values(allowed24HourMap[hour]).find(v => v === true);\n    }\n    return allowed24HourMap[hour][minutes];\n  };\n}\n","import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Component, EventEmitter, Output, Inject, DoCheck } from '@angular/core';\nimport { ClockViewType, ClockMode, IAllowed24HourMap, IAllowed12HourMap } from '../interfaces-and-types';\nimport { twoDigits, convertHoursForMode } from '../util';\n\n@Component({\n  selector: 'mat-timepicker-dialog',\n  templateUrl: './timepicker-dialog.component.html',\n  styleUrls: ['./timepicker-dialog.component.scss']\n})\nexport class MatTimepickerComponentDialogComponent implements DoCheck {\n\n  twoDigits = twoDigits;\n\n  @Output() changeEvent: EventEmitter<any> = new EventEmitter<any>();\n  @Output() okClickEvent: EventEmitter<any> = new EventEmitter<any>();\n  @Output() cancelClickEvent: EventEmitter<any> = new EventEmitter<any>();\n\n  allowed24HourMap: IAllowed24HourMap = null;\n  allowed12HourMap: IAllowed12HourMap = null;\n\n  invalidSelection = false;\n\n  okLabel: string;\n  cancelLabel: string;\n\n  set value(value: any) {\n    value = value || this.minDate || this.maxDate || new Date();\n    this.hours = value.getHours();\n    this.minutes = value.getMinutes();\n    this._value = value;\n  }\n\n  get value() { return this._value; }\n\n  mode: ClockMode;\n  viewType: ClockViewType = 'hours';\n\n  minutes: any;\n  color: string;\n  isPm = false;\n  skipMinuteAutoSwitch = false;\n  autoSwitchID = null;\n  invalidMedianID = null;\n  hasInvalidMeridiem = false;\n  editHoursClicked = false;\n  isClosing = false;\n\n  minDate: Date;\n  maxDate: Date;\n\n  // tslint:disable-next-line:variable-name\n  _formattedHour: any;\n  // tslint:disable-next-line:variable-name\n  _hours: any;\n  // tslint:disable-next-line:variable-name\n  _value: Date;\n\n  set hours(value: any) {\n    this._hours = value;\n    this._formattedHour = convertHoursForMode(this.hours, this.mode).hour;\n  }\n  get hours() { return this._hours; }\n\n  get formattedHours() { return this._formattedHour; }\n\n  bindData(data: any) {\n    this.mode = data.mode;\n    this.okLabel = data.okLabel;\n    this.cancelLabel = data.cancelLabel;\n    this.color = data.color;\n    this.minDate = data.minDate;\n    this.maxDate = data.maxDate;\n    this.allowed12HourMap = data.allowed12HourMap;\n    this.allowed24HourMap = data.allowed24HourMap;\n  }\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data) {\n    this.isPm = data.isPm;\n    this.bindData(data);\n    // keep this always at the bottom\n    this.value = data.value;\n  }\n\n  ngDoCheck() { this.bindData(this.data); }\n\n  handleClockChange({ value, type }: { value: number, type: 'minutes' | 'hours' }) {\n    const is24hoursAutoMeridiemChange = this.mode === '24h' && type === 'hours' && (\n      (this.hours >= 12 && value < 12) || (this.hours < 12 && value >= 12));\n    if ((this.hasInvalidMeridiem && this.mode === '12h') || is24hoursAutoMeridiemChange) {\n      this.isPm = !this.isPm;\n      this.hasInvalidMeridiem = false;\n    }\n\n    if ((type && type === 'hours') || (!type && this.viewType === 'hours')) {\n      this.hours = value;\n    } else if ((type && type === 'minutes') || (!type && this.viewType === 'minutes')) {\n      this.minutes = value;\n    }\n\n    const newValue = new Date();\n    const hours = this.isPm ? this.hours < 12 ? this.hours + 12 : this.hours : this.hours === 12 ? 0 : this.hours;\n    newValue.setHours(hours);\n    newValue.setMinutes(this.minutes);\n    newValue.setSeconds(0);\n    newValue.setMilliseconds(0);\n    this.value = newValue;\n    this.changeEvent.emit(newValue);\n  }\n\n  clearInvalidMeridiem() {\n    this.hasInvalidMeridiem = false;\n  }\n\n  handleUnavailableSelection() {\n    clearTimeout(this.autoSwitchID);\n  }\n\n  handleClockChangeDone(e) {\n    e.preventDefault(); // prevent mouseUp after touchEnd\n\n    if (this.viewType === 'hours' && !this.skipMinuteAutoSwitch) {\n      this.autoSwitchID = setTimeout(() => {\n        this.editMinutes();\n        this.autoSwitchID = null;\n      }, 300);\n    }\n  }\n\n  editHours() {\n    this.viewType = 'hours';\n    this.editHoursClicked = true;\n    setTimeout(() => { this.editHoursClicked = false; }, 0);\n  }\n\n  editMinutes() {\n    if (this.hasInvalidMeridiem) {\n      this.isPm = !this.isPm;\n      this.hasInvalidMeridiem = false;\n    }\n    this.viewType = 'minutes';\n  }\n\n  invalidSelectionHandler(value) {\n    this.invalidSelection = value;\n  }\n\n\n  invalidMeridiem() {\n    if (this.viewType !== 'minutes' && this.editHoursClicked) {\n      if (this.invalidMedianID) { return; }\n      this.invalidMedianID = setTimeout(() => {\n        this.isPm = !this.isPm;\n        this.hasInvalidMeridiem = false;\n      }, 0);\n      return;\n    }\n    this.hasInvalidMeridiem = true;\n  }\n\n  meridiemChange(hours) {\n    const changeData = {\n      type: this.viewType,\n      value: this.viewType === 'hours' ? hours : this.value.getMinutes()\n    };\n    this.handleClockChange(changeData);\n  }\n\n\n  setAm() {\n    if (this.hours >= 12) {\n      this.hours = this.hours - 12;\n    }\n    this.isPm = false;\n\n    this.meridiemChange(this.hours);\n  }\n\n  setPm() {\n    if (this.hours < 12) {\n      this.hours = this.hours + 12;\n    }\n    this.isPm = true;\n    this.meridiemChange(this.hours);\n  }\n\n  okClickHandler() {\n    if (this.hasInvalidMeridiem) {\n      this.isPm = !this.isPm;\n      this.hasInvalidMeridiem = false;\n    }\n    this.okClickEvent.emit();\n  }\n\n  cancelClickHandler() {\n    this.cancelClickEvent.emit();\n  }\n\n}\n","import { ControlValueAccessor, NgForm, NgControl, FormGroupDirective, FormControl } from '@angular/forms';\nimport {\n  Directive,\n  OnInit,\n  EventEmitter,\n  Input,\n  ElementRef,\n  OnChanges,\n  Renderer2,\n  AfterViewInit,\n  OnDestroy,\n  Optional,\n  SimpleChanges,\n  NgZone,\n  HostBinding,\n  Self,\n  Output,\n  HostListener\n} from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatFormFieldControl, MatFormField } from '@angular/material/form-field';\nimport { ClockMode, IAllowed24HourMap, IAllowed12HourMap } from './interfaces-and-types';\nimport { twoDigits, convertHoursForMode, isAllowed, isDateInRange, isTimeInRange } from './util';\nimport { MatTimepickerComponentDialogComponent } from './timepicker-dialog/timepicker-dialog.component';\nimport { Subject } from 'rxjs';\nimport { takeUntil, first } from 'rxjs/operators';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { Platform } from '@angular/cdk/platform';\n\n@Directive({\n  selector: 'input[matTimepicker]',\n  providers: [\n    { provide: MatFormFieldControl, useExisting: MatTimepickerDirective }\n  ],\n  // tslint:disable-next-line:no-host-metadata-property\n  host: {\n    /**\n     * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n     */\n    // tslint:disable-next-line:object-literal-key-quotes\n    'class': 'mat-input-element mat-form-field-autofill-control',\n    '[class.mat-input-server]': '_isServer',\n    // Native input properties that are overwritten by Angular inputs need to be synced with\n    // the native input element. Otherwise property bindings for those don't work.\n    '[attr.id]': 'id',\n    '[attr.placeholder]': 'placeholder',\n    '[disabled]': 'disabled',\n    '[required]': 'required',\n    '[attr.readonly]': 'readonly || null',\n    '[attr.aria-invalid]': 'errorState',\n    '[attr.aria-required]': 'required.toString()',\n  },\n  exportAs: 'matTimepicker'\n})\nexport class MatTimepickerDirective implements\n  OnInit,\n  OnChanges,\n  AfterViewInit,\n  OnDestroy,\n  ControlValueAccessor,\n  MatFormFieldControl<any>\n{\n  static nextId = 0;\n\n  /** Whether the component is being rendered on the server. */\n  // tslint:disable-next-line:variable-name\n  readonly _isServer: boolean;\n\n  // tslint:disable-next-line:variable-name\n  _errorState = false;\n  get errorState() {\n    const oldState = this._errorState;\n    const parent = this._parentFormGroup || this._parentForm;\n    const control = this.ngControl ? this.ngControl.control as FormControl : null;\n    const newState = this.errorStateMatcher ? this.errorStateMatcher.isErrorState(control, parent) : oldState;\n\n    if (newState !== oldState) {\n      this._errorState = newState;\n      this.stateChanges.next();\n    }\n\n    return newState;\n  }\n\n  @Input()\n  get disabled(): boolean {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // Browsers may not fire the blur event if the input is disabled too quickly.\n    // Reset from here to ensure that the element doesn't become stuck.\n    if (this.focused) {\n      this.focused = false;\n      this.stateChanges.next();\n    }\n  }\n  // tslint:disable-next-line:variable-name\n  protected _disabled = false;\n\n  @Input() get id(): string { return this._id; }\n  set id(value: string) { this._id = value || this._uid; }\n  // tslint:disable-next-line:variable-name\n  protected _id: string;\n\n  @Input() get readonly(): boolean { return this._readonly; }\n  set readonly(value: boolean) { this._readonly = coerceBooleanProperty(value); }\n  // tslint:disable-next-line:variable-name\n  private _readonly = false;\n\n  private isAlive: Subject<any> = new Subject<any>();\n  stateChanges = new Subject<void>();\n\n  // tslint:disable-next-line:variable-name\n  protected _uid = `mat-input-${MatTimepickerDirective.nextId++}`;\n  @HostBinding('class.floating') get shouldLabelFloat() { return this.focused || !this.empty; }\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  @Input() get required() {\n    return this._required;\n  }\n\n  set required(req) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n  // tslint:disable-next-line:variable-name\n  private _required = false;\n\n  @Input() get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n  // tslint:disable-next-line:variable-name\n  private _placeholder: string;\n\n  focused = false;\n  private pattern: RegExp;\n\n  private allowed24HourMap: IAllowed24HourMap = null;\n  private allowed12HourMap: IAllowed12HourMap = null;\n\n  private isInputFocused = false;\n\n  /** Override the label of the ok button. */\n  @Input() okLabel = 'Ok';\n  /** Override the label of the cancel button. */\n  @Input() cancelLabel = 'Cancel';\n\n  /** Sets the clock mode, 12-hour or 24-hour clocks are supported. */\n  @Input() mode: ClockMode = '24h';\n  @Input() color = 'primary';\n  @Input() disableDialogOpenOnClick = false;\n  @Input() strict = true;\n\n  controlType = 'angular-material-timepicker';\n\n  private listeners: (() => void)[] = [];\n\n  @Input() minDate: Date;\n  @Input() maxDate: Date;\n\n  // tslint:disable-next-line:variable-name\n  private _isPm: boolean;\n  // tslint:disable-next-line:variable-name\n  private _value: Date;\n  // tslint:disable-next-line:variable-name\n  private _formattedValueString: string;\n\n  // tslint:disable-next-line:variable-name\n  private _skipValueChangeEmission = true;\n\n  @Input() set value(value: Date) {\n    if (value === this._value) { return; }\n    this._value = value;\n    if (!value) {\n      this._formattedValueString = null;\n      this.setInputElementValue(value);\n      this.currentValue = value;\n      return;\n    }\n\n    const { hour, isPm } = convertHoursForMode(value.getHours(), this.mode);\n    this._isPm = isPm;\n    this._formattedValueString = this.mode === '12h' ?\n      `${hour}:${twoDigits(value.getMinutes())} ${isPm ? 'pm' : 'am'}` :\n      `${twoDigits(value.getHours())}:${twoDigits(value.getMinutes())}`;\n\n    if (!this.isInputFocused) { this.setInputElementValue(this.formattedValueString); }\n    this.currentValue = value;\n    this.stateChanges.next();\n\n    if (this._skipValueChangeEmission) { return; }\n    this.timeChange.emit(this.currentValue);\n  }\n\n  get value() { return this._value; }\n\n  get isPm() { return this._isPm; }\n\n  get empty() {\n    return !(this.currentValue instanceof Date);\n  }\n\n  private get formattedValueString() { return this._formattedValueString; }\n\n  private currentValue: Date;\n  private modalRef: MatDialogRef<MatTimepickerComponentDialogComponent>;\n\n  private onChangeFn: any;\n  private onTouchedFn: any;\n  private combination: string[] = [];\n\n  @Output() timeChange: EventEmitter<any> = new EventEmitter<any>();\n  @Output() invalidInput: EventEmitter<any> = new EventEmitter<any>();\n\n  @HostListener('input') inputHandler() {\n    let value = (this.elRef.nativeElement as any).value as string;\n    const length = value.length;\n    if (length === 0) {\n      this.writeValue(null, true);\n      if (this.onChangeFn) { this.onChangeFn(null); }\n      return;\n    }\n\n    const meridiemResult = value.match(/am|pm/i);\n    let meridiem: string | null = null;\n    if (meridiemResult) {\n      value = value.replace(meridiemResult[0], '');\n      [meridiem] = meridiemResult;\n    }\n    const valueHasColumn = value.includes(':');\n    let [hours, minutes]: any = length === 1 ? [value, 0] :\n      length === 2 && !valueHasColumn ? [value, 0] : valueHasColumn ? value.split(':') : value.split(/(\\d\\d)/).filter(v => v);\n\n    hours = +hours;\n\n    if (/\\s/.test(minutes)) {\n      let other;\n      [minutes, other] = minutes.split(/\\s/);\n      if (other === 'pm' && !isNaN(hours) && hours < 12) { hours += 12; }\n    }\n\n    minutes = +minutes;\n\n    if (isNaN(hours) || isNaN(minutes)) {\n      this.writeValue(null, true); return;\n    }\n\n    if (hours < 12 && meridiem && meridiem.toLowerCase() === 'pm') {\n      hours += 12;\n    } else if (hours > 12 && meridiem && meridiem.toLowerCase() === 'am') {\n      hours -= 12;\n    }\n\n    if (this.mode === '12h' && +hours < 1) {\n      hours = '1';\n    } else {\n      if (+hours > 24) {\n        hours = '24';\n      } else if (+hours < 0) {\n        hours = '0';\n      }\n    }\n\n\n    if (+minutes > 59) {\n      minutes = '59';\n    } else if (+minutes < 0) {\n      minutes = '0';\n    }\n\n    const d = this.value ? new Date(this.value.getTime()) : new Date();\n    d.setHours(+hours);\n    d.setMinutes(+minutes);\n    d.setSeconds(0);\n    d.setMilliseconds(0);\n\n    const isValueInRange = isDateInRange(this.minDate, this.maxDate, d);\n    if (!isValueInRange) { this.invalidInput.emit(); }\n\n\n    this.writeValue(d, true);\n    if (this.onChangeFn) { this.onChangeFn(d); }\n  }\n\n  @HostListener('keydown', ['$event']) keydownHandler(event: any) {\n    if (event.metaKey || event.ctrlKey || event.altKey) {\n      this.combination = this.combination.concat(event.code);\n      return;\n    }\n    if (!/^[0-9a-zA-Z\\s]{0,1}$/.test(event.key)) { return; }\n    const target = event.target;\n    const tValue = target.value;\n    const value = `${tValue.slice(0, target.selectionStart)}${event.key}${tValue.slice(target.selectionEnd)}`;\n    if (value.match(this.pattern) || this.combination.length > 0) { return true; }\n    event.preventDefault();\n    event.stopImmediatePropagation();\n  }\n\n  @HostListener('keyup', ['$event']) keyupHandler(event: any) {\n    this.combination = this.combination.filter(v => v !== event.code);\n  }\n\n  @HostListener('focus') focusHandler() {\n    this.isInputFocused = true;\n  }\n\n  @HostListener('focusout') focusoutHandler() {\n    this.isInputFocused = false;\n    this.setInputElementValue(this.formattedValueString);\n    if (this.onTouchedFn && !this.modalRef) { this.onTouchedFn(); }\n  }\n\n  constructor(\n    @Optional() @Self() public ngControl: NgControl,\n    public dialog: MatDialog,\n    private renderer: Renderer2,\n    private zone: NgZone,\n    private fm: FocusMonitor,\n    private elRef: ElementRef<HTMLElement>,\n    private ngZone: NgZone,\n    // tslint:disable-next-line:variable-name\n    protected _platform: Platform,\n    // tslint:disable-next-line:variable-name\n    @Optional() private _parentForm: NgForm,\n    // tslint:disable-next-line:variable-name\n    @Optional() private _matFormFiled: MatFormField,\n    // tslint:disable-next-line:variable-name\n    @Optional() private _parentFormGroup: FormGroupDirective,\n    // tslint:disable-next-line:variable-name\n    _defaultErrorStateMatcher: ErrorStateMatcher,\n  ) {\n    this.id = this.id;\n\n    this.errorStateMatcher = _defaultErrorStateMatcher;\n    if (this.ngControl != null) { this.ngControl.valueAccessor = this; }\n\n    if (_platform.IOS) {\n      ngZone.runOutsideAngular(() => {\n        elRef.nativeElement.addEventListener('keyup', (event: Event) => {\n          const el = event.target as HTMLInputElement;\n          if (!el.value && !el.selectionStart && !el.selectionEnd) {\n            // Note: Just setting `0, 0` doesn't fix the issue. Setting\n            // `1, 1` fixes it for the first time that you type text and\n            // then hold delete. Toggling to `1, 1` and then back to\n            // `0, 0` seems to completely fix it.\n            el.setSelectionRange(1, 1);\n            el.setSelectionRange(0, 0);\n          }\n        });\n      });\n    }\n\n    this._isServer = !this._platform.isBrowser;\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() !== 'input') {\n      this.elRef.nativeElement.focus();\n    }\n  }\n\n  setInputElementValue(value: any) {\n    Promise.resolve().then(() => {\n      this.zone.runOutsideAngular(() => {\n        this.renderer.setProperty(this.elRef.nativeElement, 'value', value);\n      });\n    });\n  }\n\n  validate() {\n    const isValueInRange = this.strict ?\n      isDateInRange(this.minDate, this.maxDate, this.currentValue) :\n      isTimeInRange(this.minDate, this.maxDate, this.currentValue);\n\n    return isValueInRange ? null : { dateRange: true };\n  }\n\n  ngAfterViewInit() {\n    this.listeners.push(\n      this.renderer.listen(\n        this._matFormFiled ? this._matFormFiled._elementRef.nativeElement : this.elRef.nativeElement\n        , 'click', this.clickHandler)\n    );\n  }\n\n  clickHandler = (e: FocusEvent) => {\n    if ((this.modalRef && this.modalRef.componentInstance.isClosing) || this.disabled || this.disableDialogOpenOnClick) { return; }\n    if (!this.modalRef && !this.disableDialogOpenOnClick) { this.showDialog(); }\n  }\n\n  ngOnInit() {\n    if (this._platform.isBrowser) {\n      this.fm.monitor(this.elRef.nativeElement, true).subscribe(origin => {\n        this.focused = !!origin;\n        this.stateChanges.next();\n      });\n\n    }\n    if (!this.value) {\n      const hasMaxDate = !!this.maxDate;\n      const hasMinDate = !!this.minDate;\n\n      if (hasMinDate || hasMaxDate) {\n        if (hasMinDate) { this.minDate.setSeconds(0); this.minDate.setMilliseconds(0); }\n        if (hasMaxDate) { this.maxDate.setSeconds(0); this.maxDate.setMilliseconds(0); }\n        Promise.resolve().then(() => this.generateAllowedMap());\n\n        if (!(this.ngControl as any)._rawValidators.find(v => v === this)) {\n          (this.ngControl as any)._rawValidators.push(this);\n        }\n      }\n    }\n    this._skipValueChangeEmission = false;\n  }\n\n  generateAllowedMap() {\n    const isStrictMode = this.strict && this.value instanceof Date;\n    if (this.mode === '24h') {\n      this.allowed24HourMap = {};\n      for (let h = 0; h < 24; h++) {\n        for (let m = 0; m < 60; m++) {\n          const hourMap = this.allowed24HourMap[h] || {};\n          if (isStrictMode) {\n            const currentDate = new Date(this.value.getTime());\n            currentDate.setHours(h);\n            currentDate.setMinutes(m);\n            currentDate.setSeconds(0);\n            currentDate.setMilliseconds(0);\n            hourMap[m] = isDateInRange(this.minDate, this.maxDate, currentDate);\n          } else {\n            hourMap[m] = isAllowed(h, m, this.minDate, this.maxDate, '24h');\n          }\n          this.allowed24HourMap[h] = hourMap;\n        }\n      }\n    } else {\n      this.allowed12HourMap = { am: {}, pm: {} };\n      for (let h = 0; h < 24; h++) {\n        const meridiem = h < 12 ? 'am' : 'pm';\n        for (let m = 0; m < 60; m++) {\n          const hour = (h > 12 ? h - 12 : h === 0 ? 12 : h);\n          const hourMap = this.allowed12HourMap[meridiem][hour] || {};\n          if (isStrictMode) {\n            const currentDate = new Date(this.value.getTime());\n            currentDate.setHours(h);\n            currentDate.setMinutes(m);\n            currentDate.setSeconds(0);\n            currentDate.setMilliseconds(0);\n            hourMap[m] = isDateInRange(this.minDate, this.maxDate, currentDate);\n          } else {\n            hourMap[m] = isAllowed(h, m, this.minDate, this.maxDate, '24h');\n          }\n          this.allowed12HourMap[meridiem][hour] = hourMap;\n        }\n      }\n    }\n  }\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n\n    this.pattern = this.mode === '24h' ? /^[0-9]{1,2}:?([0-9]{1,2})?$/ : /^[0-9]{1,2}:?([0-9]{1,2})?\\s?(a|p)?m?$/;\n\n    if (\n      (simpleChanges.minDate && !simpleChanges.minDate.isFirstChange &&\n        +simpleChanges.minDate.currentValue !== simpleChanges.minDate.previousValue) ||\n      (simpleChanges.maxDate && !simpleChanges.maxDate.isFirstChange &&\n        +simpleChanges.maxDate.currentValue !== simpleChanges.maxDate.previousValue) ||\n      (simpleChanges.disableLimitBase && !simpleChanges.disableLimitBase.isFirstChange &&\n        +simpleChanges.disableLimitBase.currentValue !== simpleChanges.disableLimitBase.previousValue)\n    ) { this.generateAllowedMap(); }\n\n    if (!this.modalRef || !this.modalRef.componentInstance) { return; }\n\n    this.modalRef.componentInstance.data = {\n      mode: this.mode,\n      value: this.currentValue,\n      okLabel: this.okLabel,\n      cancelLabel: this.cancelLabel,\n      color: this.color,\n      isPm: this.isPm,\n      minDate: this.minDate,\n      maxDate: this.maxDate,\n      allowed12HourMap: this.allowed12HourMap,\n      allowed24HourMap: this.allowed24HourMap\n    };\n  }\n\n  checkValidity(value: Date) {\n    if (!value) { return false; }\n    const hour = value.getHours();\n    const minutes = value.getMinutes();\n    const meridiem = this.isPm ? 'PM' : 'AM';\n    return isAllowed(hour, minutes, this.minDate, this.maxDate, this.mode, meridiem);\n  }\n\n  writeValue(value: Date, isInnerCall = false): void {\n\n    if (!isInnerCall) {\n      this._skipValueChangeEmission = true;\n      Promise.resolve().then(() => this._skipValueChangeEmission = false);\n    }\n\n    if (value) {\n      value.setSeconds(0);\n      value.setMilliseconds(0);\n    }\n\n    if (+this.value !== +value) { this.value = value; }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeFn = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedFn = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  showDialog() {\n    if (this.disabled) { return; }\n    this.isInputFocused = false;\n    this.modalRef = this.dialog.open(MatTimepickerComponentDialogComponent, {\n      autoFocus: false,\n      data: {\n        mode: this.mode,\n        value: this.currentValue,\n        okLabel: this.okLabel,\n        cancelLabel: this.cancelLabel,\n        color: this.color,\n        isPm: this.isPm,\n        minDate: this.minDate,\n        maxDate: this.maxDate,\n        allowed12HourMap: this.allowed12HourMap,\n        allowed24HourMap: this.allowed24HourMap\n      }\n    });\n    const instance = this.modalRef.componentInstance;\n    instance.changeEvent.pipe(takeUntil(this.isAlive)).subscribe(this.handleChange);\n    instance.okClickEvent.pipe(takeUntil(this.isAlive)).subscribe(this.handleOk);\n    instance.cancelClickEvent.pipe(takeUntil(this.isAlive)).subscribe(this.handleCancel);\n    this.modalRef.beforeClosed().pipe(first()).subscribe(() => instance.isClosing = true);\n    this.modalRef.afterClosed().pipe(first()).subscribe(() => {\n      if (this.onTouchedFn) { this.onTouchedFn(); }\n      this.modalRef = null;\n      this.elRef.nativeElement.focus();\n    });\n\n    this.currentValue = this.value as Date;\n  }\n\n  handleChange = (newValue) => {\n    if (!(newValue instanceof Date)) { return; }\n    const v = this.value instanceof Date ? new Date(this.value.getTime()) : new Date();\n    v.setHours(newValue.getHours());\n    v.setMinutes(newValue.getMinutes());\n    v.setSeconds(0);\n    v.setMilliseconds(0);\n    this.currentValue = v;\n  }\n\n  handleOk = () => {\n    if (this.onChangeFn) { this.onChangeFn(this.currentValue); }\n    this.value = this.currentValue;\n    this.modalRef.close();\n  }\n\n  handleCancel = () => {\n    this.modalRef.close();\n  }\n\n  ngOnDestroy() {\n    this.isAlive.next();\n    this.isAlive.complete();\n    this.stateChanges.complete();\n\n    if (this._platform.isBrowser) {\n      this.fm.stopMonitoring(this.elRef.nativeElement);\n    }\n\n    this.listeners.forEach(l => l());\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { ClockViewType, ClockNumber, ITimeData, ClockMode } from '../interfaces-and-types';\nimport { isAllowed, getIsAvailabeFn } from '../util';\n\n@Component({\n  selector: 'mat-clock',\n  templateUrl: './clock.component.html',\n  styleUrls: ['./clock.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ClockComponent implements OnChanges {\n\n  @Input() mode: ClockMode;\n  @Input() viewType: ClockViewType;\n  @Input() color = 'primary';\n  @Input() formattedValue: number;\n  @Input() minDate: Date;\n  @Input() maxDate: Date;\n  @Input() isPm: boolean;\n  @Input() formattedHours: number;\n  @Input() minutes: number;\n  @Output() changeEvent: EventEmitter<any> = new EventEmitter<any>();\n  @Output() unavailableSelection: EventEmitter<any> = new EventEmitter<any>();\n  @Output() invalidMeridiem: EventEmitter<any> = new EventEmitter<any>();\n  @Output() invalidSelection: EventEmitter<any> = new EventEmitter<any>();\n  @Output() clearInvalidMeridiem: EventEmitter<any> = new EventEmitter<any>();\n\n  @Input() allowed12HourMap = null;\n  @Input() allowed24HourMap = null;\n\n  isFormattedValueAllowed = true;\n\n  isAvailableFn: ReturnType<typeof getIsAvailabeFn>;\n\n  meridiem = null;\n  touching = false;\n  angle: number;\n  numbers: ClockNumber[] = [];\n  secondaryNumbers: ClockNumber[] = [];\n  minuteDots: ClockNumber[] = [];\n  invalidMeridiemEmitted = true;\n\n  initIsAllowedFn() {\n    if (!this.allowed12HourMap && !this.allowed24HourMap) { return; }\n    this.isAvailableFn = getIsAvailabeFn(this.allowed12HourMap, this.allowed24HourMap, this.mode);\n  }\n\n  isAvailable(value) {\n    return this.isAvailableFn ? this.isAvailableFn(value, this.viewType, this.isPm, this.formattedHours) : true;\n  }\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n\n    if (\n      simpleChanges.allowed12HourMap ||\n      simpleChanges.allowed24HourMap ||\n      (simpleChanges.mode && !simpleChanges.mode.firstChange)\n    ) {\n      this.initIsAllowedFn();\n    }\n\n    this.calculateAngule();\n    this.setNumbers();\n    this.meridiem = this.isPm ? 'PM' : 'AM';\n\n    if (simpleChanges.formattedValue && (this.allowed12HourMap || this.allowed24HourMap)) {\n      this.isFormattedValueAllowed = this.isAvailable(this.formattedValue);\n    }\n\n    const isSelectedTimeAvailable = (this.isAvailableFn) ?\n      this.isAvailableFn(this.formattedValue, 'minutes', this.isPm, this.formattedHours) : true;\n\n    if (this.mode === '24h' && this.viewType === 'minutes' && this.isAvailableFn) {\n      const areMinitesAvailable = this.isAvailableFn(this.minutes, 'minutes', this.isPm, this.formattedHours);\n      if (!areMinitesAvailable) {\n        if (this.minDate && this.minDate.getMinutes() > this.minutes) {\n          setTimeout(() => { this.changeEvent.emit({ value: this.minDate.getMinutes(), type: 'minutes' }); });\n        } else {\n          setTimeout(() => { this.changeEvent.emit({ value: this.maxDate.getMinutes(), type: 'minutes' }); });\n        }\n      }\n    }\n\n    if (isSelectedTimeAvailable && this.invalidMeridiemEmitted) {\n      this.clearInvalidMeridiem.emit();\n      this.invalidMeridiemEmitted = false;\n    }\n\n    this.invalidSelection.emit(!isSelectedTimeAvailable);\n  }\n\n  calculateAngule() {\n    this.angle = this.getPointerAngle(this.formattedValue, this.viewType);\n  }\n\n  setNumbers() {\n    if (this.viewType === 'hours') {\n      if (this.mode === '12h') {\n        const meridiem = this.isPm ? 'pm' : 'am';\n        const isAllowedFn = this.allowed12HourMap ? num => this.allowed12HourMap[meridiem][num + 1][0] : undefined;\n        this.numbers = this.getNumbers(12, { size: 256 }, isAllowedFn);\n        this.secondaryNumbers = [];\n        this.minuteDots = [];\n      } else if (this.mode === '24h') {\n        const isAllowedFn = this.allowed24HourMap ? num => this.allowed24HourMap[num][0] : undefined;\n        this.numbers = this.getNumbers(12, { size: 256 }, isAllowedFn);\n        this.secondaryNumbers = this.getNumbers(12, { size: 256 - 64, start: 13 }, isAllowedFn);\n        this.minuteDots = [];\n      }\n    } else {\n      const meridiem = this.isPm ? 'pm' : 'am';\n      const isAllowedFn =\n        !!this.allowed12HourMap ? num => this.allowed12HourMap[meridiem][this.formattedHours][num] :\n          !!this.allowed24HourMap ? num => this.allowed24HourMap[this.formattedHours][num] : undefined;\n\n      this.numbers = this.getNumbers(12, { size: 256, start: 5, step: 5 }, isAllowedFn);\n      this.minuteDots = this.getNumbers(60, { size: 256, start: 13 }).map(digit => {\n        if (digit.display <= 59) {\n          digit.allowed = isAllowedFn ? isAllowedFn(digit.display) : true;\n          return digit;\n        }\n        digit.display = digit.display - 60;\n        digit.allowed = isAllowedFn ? isAllowedFn(digit.display) : true;\n        return digit;\n      });\n      this.secondaryNumbers = [];\n    }\n  }\n\n  disableAnimatedPointer() {\n    this.touching = true;\n  }\n\n  enableAnimatedPointer() {\n    this.touching = false;\n  }\n\n  handleTouchMove = (e: any) => {\n    e.preventDefault(); // prevent scrolling behind the clock on iOS\n    const rect = e.target.getBoundingClientRect();\n    this.movePointer(e.changedTouches[0].clientX - rect.left, e.changedTouches[0].clientY - rect.top);\n  }\n\n  handleTouchEnd(e: any) {\n    this.handleTouchMove(e);\n    this.enableAnimatedPointer();\n  }\n\n  handleMouseMove(e: any) {\n    // MouseEvent.which is deprecated, but MouseEvent.buttons is not supported in Safari\n    if (e.buttons === 1 || e.which === 1) {\n      const rect = e.target.getBoundingClientRect();\n      this.movePointer(e.clientX - rect.left, e.clientY - rect.top);\n    }\n  }\n\n  handleClick(e: any) {\n    const rect = e.target.getBoundingClientRect();\n    this.movePointer(e.clientX - rect.left, e.clientY - rect.top);\n  }\n\n  movePointer(x, y) {\n    const value = this.getPointerValue(x, y, 256);\n    if (!this.isAvailable(value)) {\n      this.unavailableSelection.emit();\n      return;\n    }\n    if (value !== this.formattedValue) {\n      this.changeEvent.emit({ value, type: this.viewType !== 'minutes' ? 'hours' : 'minutes' });\n      if (this.viewType !== 'minutes') {\n        if (!this.isAvailable(value)) {\n          if (this.minDate && this.isAvailable(value)\n          ) {\n            this.changeEvent.emit({ value: this.minDate.getMinutes(), type: 'minutes' });\n          } else if (this.maxDate && this.isAvailable(value)) {\n            this.changeEvent.emit({ value: this.maxDate.getMinutes(), type: 'minutes' });\n          }\n        }\n      }\n    }\n  }\n\n  getNumbers(count, { size, start = 1, step = 1 }, isAllowedFn?: (num: number) => boolean) {\n    return Array.apply(null, Array(count)).map((_, i) => ({\n      display: i * step + start,\n      translateX: (size / 2 - 20) * Math.cos(2 * Math.PI * (i - 2) / count),\n      translateY: (size / 2 - 20) * Math.sin(2 * Math.PI * (i - 2) / count),\n      allowed: isAllowedFn ? isAllowedFn(i) : true\n    }));\n  }\n\n  getPointerAngle(value, mode: ClockViewType) {\n    if (this.viewType === 'hours') {\n      return this.mode === '12h' ? 360 / 12 * (value - 3) : 360 / 12 * (value % 12 - 3);\n    }\n    return 360 / 60 * (value - 15);\n  }\n\n  getPointerValue(x, y, size) {\n    let value;\n    let angle = Math.atan2(size / 2 - x, size / 2 - y) / Math.PI * 180;\n    if (angle < 0) {\n      angle = 360 + angle;\n    }\n\n    if (this.viewType === 'hours') {\n      if (this.mode === '12h') {\n        value = 12 - Math.round(angle * 12 / 360);\n        return value === 0 ? 12 : value;\n      }\n\n      const radius = Math.sqrt(Math.pow(size / 2 - x, 2) + Math.pow(size / 2 - y, 2));\n      value = 12 - Math.round(angle * 12 / 360);\n      if (value === 0) { value = 12; }\n      if (radius < size / 2 - 32) { value = value === 12 ? 0 : value + 12; }\n      return value;\n\n    }\n\n    value = Math.round(60 - 60 * angle / 360);\n    return value === 60 ? 0 : value;\n  }\n}\n","import { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClockComponent } from './clock/clock.component';\nimport { MatTimepickerComponentDialogComponent } from './timepicker-dialog/timepicker-dialog.component';\nimport { MatTimepickerDirective } from './timepicker.directive';\n\n@NgModule({\n  declarations: [\n    ClockComponent,\n    MatTimepickerDirective,\n    MatTimepickerComponentDialogComponent\n  ],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatInputModule\n  ],\n  exports: [\n    MatTimepickerDirective\n  ],\n  entryComponents: [\n    MatTimepickerComponentDialogComponent\n  ]\n})\nexport class MatTimepickerModule { }\n"]}